#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1362815616',
        'name' => 'admin.sys.bbs.catchange.tt',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "    <table border=0 cellspacing=2 width=100%>\n     <tr>\n      <td colspan=3>以下の掲示板のカテゴリを変更します。<br><br></td>\n     </tr>\n     <tr>\n      <th class=\"DetailTitle\" style=\"width:150\">BBS Name</th>\n      <th class=\"DetailTitle\" style=\"width:100\">Category</th>\n      <th class=\"DetailTitle\" style=\"width:250\">SubScription</th>\n     </tr>\n";
#line 17 "template\admin.sys.bbs.catchange.tt"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('boards');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'board'} = $_tt_value;
    $output .=  "     <tr>\n      <td>";
#line 12 "template\admin.sys.bbs.catchange.tt"
    $output .=  $stash->get(['board', 0, 'name', 0]);
    $output .=  "</td>\n      <td>";
#line 13 "template\admin.sys.bbs.catchange.tt"
    $output .=  $stash->get(['board', 0, 'category', 0]);
    $output .=  "</td>\n      <td>";
#line 14 "template\admin.sys.bbs.catchange.tt"
    $output .=  $stash->get(['board', 0, 'subject', 0]);
    $output .=  "</td>\n      <input type=hidden name=\"BBSS\" value=\"";
#line 15 "template\admin.sys.bbs.catchange.tt"
    $output .=  $stash->get(['board', 0, 'id', 0]);
    $output .=  "\">\n     </tr>\n";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "     <tr><td colspan=3><hr></td></tr>\n     <tr>\n      <td colspan=3 align=left>\n       変更後カテゴリ：\n       <select name=SEL_CATEGORY>\n";
#line 25 "template\admin.sys.bbs.catchange.tt"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('categories');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'cat'} = $_tt_value;
    $output .=  "        <option value=\"";
#line 24 "template\admin.sys.bbs.catchange.tt"
    $output .=  $stash->get(['cat', 0, 'id', 0]);
    $output .=  "\">";
#line 24 "template\admin.sys.bbs.catchange.tt"
    $output .=  $stash->get(['cat', 0, 'name', 0]);
    $output .=  "</option>\n";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "       </select>\n       <input type=button value=\"―@変更―@\" onclick=\"DoSubmit('sys.bbs','FUNC','CATCHANGE')\">\n      </td>\n     </tr>\n    </table>\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
